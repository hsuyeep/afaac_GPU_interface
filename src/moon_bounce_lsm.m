% Script to calibrate gpu correlated visibilities available as a .mat file 
% generated by gpu2mat.py. This works on the raw output of the GPU correlator
% or a selected subset created by splitgpuvis.py. Specifically carry out
% moon bounce related processing for the Lofar status meet of 15Apr15.
% pep/30Mar15

clear all; close all;
% For moon position etc.
addpath ~/WORK/Matlab/ofek_matlab/fun/ephem

% Static data locations.
load ('poslocal_outer.mat', 'poslocal', 'posITRF');
load ('srclist3CR.mat');
f1 = figure ('position', [0, 0, 1000, 1200]);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% 28 Oct 14 Observations %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% txchan = 4;
% freq = 50500000;
% flagant = [49:96,149, 199, 241:288]; % 06Jan15 processing
% basedir = '/dop312_0/prasad/moon-bounce/28Oct14/';
% dwg_l = [-0.9413, -0.91, -0.9256, -0.8943]; % In dec. order of apparent flux
% dwg_m = [-0.3307, -0.362, -0.2877, -0.319]; 
% 
% gif = 1;
% giffname = '28Oct14_run2.gif';
% % run1
% % fnames = {'1414506535-1414506575_1414506534-1414506564.mat', '1414506535-1414506575_1414506565-1414506574.mat'};
% 
% % Wandering RFI reflectors, difficult to remove
% % run2
% fnames = {'1414506653-1414506728_1414506653-1414506682.mat','1414506653-1414506728_1414506683-1414506713.mat','1414506653-1414506728_1414506714-1414506727.mat'};



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% 06 Jan 15 Observations %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% txchan = 4;
% freq = 50500000;
% flagant = [1:48, 140, 149, 192:240 260]; % 06Jan15 processing
% basedir = '/dop312_0/prasad/moon-bounce/06Jan15/';
% 
% % 
% % fnames = {'1420577458-1420577489_1420577458-1420577488.mat'};
% fnames = {'1420578055-1420578095_1420578059-1420578089.mat', '1420578055-1420578095_1420578090-1420578094.mat'};


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% 23 Feb 15 Observations %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
txchan = 63;
freq = 53999992;
flagant = [35, 98, 140, 149, 179, 260]; % 23Feb15 processing
basedir = '/dop312_0/prasad/moon-bounce/23Feb15/good_min/';

% In dec. order of apparent flux in the tx chan image, calibrated with
% solutions derived from other channels.
% dwg_cal_l = -[0.9413, 0.9139, 0.9022, 0.9256];
% dwg_cal_m = -[0.3346, 0.3699, 0.3112, 0.3033];

% In dec. order of apparent flux in the UNcalibrated tx chan image.
dwg_uncal_l = -[0.9295, 0.9022, 0.9295, 0.9178];
dwg_uncal_m = -[0.2994, 0.3346, 0.3307, 0.3659];


gif = 1;
giffname = '23Feb15_run2.gif'

% 
% % ~70sec of data, seems to have only zeros after 14secs
% % fnames = {'1424702590-1424702665_1424702590-1424702622.mat', '1424702590-1424702665_1424702623-1424702655.mat', '1424702590-1424702665_1424702656-1424702664.mat'};
% 
% run2, Good data
dwg_on = 13; % Index at which dwingeloo dish turns on.
fnames = {'1424704210-1424704300_1424704210-1424704239.mat','1424704210-1424704300_1424704240-1424704269.mat','1424704210-1424704300_1424704270-1424704269.mat'};

% % To try
% % fnames = {'1424705545-1424705695_1424705554-1424705583.mat','1424705545-1424705695_1424705584-1424705613.mat','1424705545-1424705695_1424705614-1424705643.mat','1424705545-1424705695_1424705644-1424705674.mat','1424705545-1424705695_1424705675-1424705694.mat'};
% 
% % dwg_off = 9; % Index at which the Dwing. telescope turns off in this dataset.
% dwg_l = 0;  dwg_m = 0;
% 
% % Lots of RFI, not good.
% % load '/dop312_0/prasad/moon-bounce/23Feb15/tx_falling_edge/1424705965-1424705980_1424705966-1424705979.mat'
% 
% % 
% % load '/dop312_0/prasad/moon-bounce/23Feb15/tx_falling_edge/1424705670-1424705684_1424705671-1424705683.mat'

%%%%%%%%%%%%%%%%%%%%%%% Common code %%%%%%%%%%%%%%%%%%%%%%%%%%

load ([basedir,fnames{1}]);
acm_cat = acm;
tobs_cat = tobs;
nrec = size (acm,1);
for ind = 2:length(fnames)
    load ([basedir,fnames{ind}]);    
    acm_cat  = [acm_cat; acm];
    tobs_cat = [tobs_cat; tobs;];
    nrec = nrec + size (acm, 1);
end;

goodant = setdiff ([1:288], flagant);
vismask = zeros (288);
vismask (flagant,:) = 1;
vismask (:,flagant) = 1;


uloc = meshgrid (poslocal(:,1)) - ... 
				meshgrid (poslocal (:,1)).';
vloc = meshgrid (poslocal(:,2)) - ... 
				meshgrid (poslocal (:,2)).';
[uloc_flag, vloc_flag] = gen_flagged_uvloc (uloc, vloc, flagant); 

gparm.type = 'pillbox';
gparm.lim = 0;
gparm.duv = 0.5; 
gparm.Nuv = 500;
gparm.uvpad = 512; 
gparm.fft = 1;

cat_thresh = 100; % Threshold in Jy; only sources with 3C flux above this will be displayed

fprintf (1, 'Found %d timeslices.\n', size(acm, 1));
fprintf (2, '###NOTE: Only channel %d contains the moon signal!!\n', txchan);

% Generate required datasets:
% 1. Non tx channel and tx channel single pol. ACM timeseries
mask = triu(ones(288));
pol = 1;
acmtx_ts = zeros (nrec, 288, 288);
acctx_ts = acmtx_ts;
acm_fdiff = acmtx_ts;
acmtx = zeros (288);
acmnontx = acmtx;
sigman = acmnontx;

% convert time to mjdsec
mjddateref = datenum (1858,11,17,00,00,00); % Start of MJD
unixtime  = datenum (1970, 01, 01, 00, 00, 00);
tobs_mjdsec = (unixtime + tobs_cat/86400. - mjddateref)*86400;

tobs_jd = tobs_mjdsec/86400. + 2400000.5;
Moonpos = get_moon (tobs_jd, [6.869837540, 52.915122495]);
[Moon_l, Moon_m] = radectolm (Moonpos.RA, Moonpos.Dec, tobs_jd, 6.869837540, 52.915122495, 0);


parm.Moon_l = Moon_l;
parm.Moon_m = Moon_m;
parm.giffname = giffname;
parm.gparm = gparm;
parm.srclist3CR = srclist3CR;
parm.cat_thresh = cat_thresh;
parm.uloc_flag = uloc_flag;
parm.vloc_flag = vloc_flag;
parm.title = [];


% Work on non Tx channels over full minute.
% NOTE: Calibrating and imaging a single channel is too noisy, thus doing
% this on ~40 chans.'
% imgacm = zeros (nrec, length(goodant), length(goodant));
for ind = 1:nrec
    acmnontx = zeros (288);
    acmnontx (mask == 1) = mean (squeeze(complex (acm_cat(ind,:,20:62, 1,1), acm_cat(ind,:,20:62,1,2))),2);
    acmnontx = conj(acmnontx + acmnontx' - diag(diag(acmnontx)));  
    solnontx(ind) = pelican_sunAteamsub(acmnontx , tobs_mjdsec(ind), freq, eye(288), flagant, 0, 1, [], [], 'poslocal_outer.mat', [], []); 
    
end;

% Show calibrated images 
for ind = 1:nrec
%     imgacm (ind,:,:) = solnontx(ind).calvis;
    tmp = solnontx(ind).calvis;
    [map, calmap, calvis, l, m] = ... 
                    fft_imager_sjw_radec (tmp, uloc_flag(:), vloc_flag(:), ...
										gparm, [], [], tobs_mjdsec(ind), freq, 0);                                    
                                    
    imagesc (l, m, abs(squeeze(map))); colorbar;
    set (gca, 'YDir', 'Normal'); % To match orientation with station images
    set (gca, 'XDir', 'Reverse'); % To match orientation with station images
    title (sprintf ('Cal. img (nontx) Rec: %d, Time: %s', ind, datestr(mjdsec2datenum(tobs_mjdsec(ind)))));
    ylabel('South $\leftarrow$ m $\rightarrow$ North', 'interpreter', 'latex');
    xlabel('East $\leftarrow$ l $\rightarrow$ West', 'interpreter', 'latex'); 
    
    [sel, sel_l, sel_m] = overplotcat (tobs_mjdsec(ind), srclist3CR, ... 
                                                  cat_thresh, gcf(), true);
    text (Moon_l(ind), Moon_m(ind), '*', 'Color', 'yellow');
    drawnow();
    if (gif==1)
        frame = getframe(f1);
        im = frame2im(frame);
        [imind,cm] = rgb2ind(im,256);
        if ind == 1;
           imwrite(imind,cm,[basedir, 'notx_clean' giffname],'gif', 'Loopcount',inf);
        else
           imwrite(imind,cm,[basedir, 'notx_clean' giffname],'gif','WriteMode','append');
        end;
    end;
    
end;
% parm.giffname = ['notx_clean' giffname];
% parm.title = 'Cal. img (nontx)';
% genplot (imgacm, tobs_mjdsec, freq, parm);

% High quality gain solutions have been obtained from the average of the
% other channels, so these can now be applied to the txchan, and the diff.
% between the mean of other non tx channels and txchan.
for ind = 1:nrec
    acmtx = zeros (288);
    acmtx (mask == 1) = squeeze(complex (acm_cat(ind,:, txchan, 1,1), acm_cat(ind,:,txchan,1,2)));
    acmtx = conj(acmtx + acmtx' - diag(diag(acmtx)));
    
    acmnontx = zeros (288);
    acmnontx (mask == 1) = mean(squeeze(complex (acm_cat(ind,:, 20:62, 1,1), acm_cat(ind,:,20:62,1,2))), 2);
    acmnontx = conj(acmnontx + acmnontx' - diag(diag(acmnontx)));
    
    acmtx_ts (ind,:, :) = acmtx;
    %acm_fdiff (ind, :, :) = (solnontx(ind).gainsol'*solnontx(ind).gainsol) .* (acmtx - acmnontx);
    acm_fdiff (ind, :, :) = (acmtx - acmnontx);
    
    % Apply calibration to txchan data over full dataset.
    sigman(vismask == 0) = solnontx(ind).sigman;
    acctx_ts (ind, :, :) = (solnontx(ind).gainsol'*solnontx(ind).gainsol) .* (acmtx - sigman);
    % acctx_ts (ind, :, :) = (sol62(ind).gainsol'*sol62(ind).gainsol) .* (acmtx);         
end;

map63 = zeros (nrec, gparm.uvpad, gparm.uvpad);
%%%%%%%%%% 1. Direct Imaging  %%%%%%%%%%%
% Independently image each calibrated timeslice	of the txchan.
rfi_l = find (l<-0.84);
rfi_m = find (m<-0.22 & m>-0.4);
for ind = 1:nrec
    % acc = acm_fdiff(ind,goodant, goodant);
    acc = acctx_ts(ind, goodant, goodant);
    [map63(ind,:,:), calmap, calvis, l, m] = fft_imager_sjw_radec (acc, uloc_flag(:), vloc_flag(:),	gparm, [], [], tobs_mjdsec(ind), freq, 0);                                    
                                    
    imagesc (l, m, abs(squeeze(map63(ind,:,:)))); colorbar;
    % caxis ([0 2e11]);
    % imagesc (l(rfi_l), m(rfi_m), abs(squeeze(map63(ind,rfi_m,rfi_l)))); caxis ([0 1e14]); colorbar;
    set (gca, 'YDir', 'Normal'); % To match orientation with station images
    set (gca, 'XDir', 'Reverse'); % To match orientation with station images
    title (sprintf ('Tx chan: Rec: %d, Time: %s', ind, datestr(mjdsec2datenum(tobs_mjdsec(ind)))));
    ylabel('South $\leftarrow$ m $\rightarrow$ North', 'interpreter', 'latex');
    xlabel('East $\leftarrow$ l $\rightarrow$ West', 'interpreter', 'latex'); 
    
%     [sel, sel_l, sel_m] = overplotcat (tobs_mjdsec(ind), srclist3CR, ... 
%                                                   cat_thresh, gcf(), true);
    text (Moon_l(ind), Moon_m(ind), '*', 'Color', 'yellow');    
    drawnow();
    if (gif==1)
        frame = getframe(1);
        im = frame2im(frame);
        [imind,cm] = rgb2ind(im,256);
        if ind == 1;
           imwrite(imind,cm,[basedir, 'tx_cal' giffname],'gif', 'Loopcount',inf);
        else
            imwrite(imind,cm,[basedir, 'tx_cal' giffname],'gif','WriteMode','append');
        end;
    end;
end;

%%%%%%%%%%%  Eigenspectrum analysis  %%%%%%%%%%%%%%
f3 = figure ('position', [0, 0, 1000, 600]); 
for ind = 1:nrec-1
    [v,d] = eig (squeeze(acm_fdiff(ind,goodant,goodant))); %% Only XX pol for now.
    pl = diag(d); % Vector to plot
    
    clf;
    subplot (121);    
    plot ((pl(1:end)), '.');
    xlabel ('Dimension'); ylabel ('Eigenvalue'); 
    title (sprintf ('Rec: %d, Time: %s\n', ind, datestr(mjdsec2datenum(tobs_mjdsec(ind)))));
    subplot (122);
    imagesc (squeeze(abs(acm_fdiff(ind,:,:))));
    % plot (10*log10(pl(pl>0)), '.-'); 
    xlabel ('Ant'); ylabel ('Ant');
    title (sprintf ('Rec: %d, Time: %s\n', ind, datestr(mjdsec2datenum(tobs_mjdsec(ind)))));        
    if (gif==1)
        frame = getframe(1);
        im = frame2im(frame);
        [imind,cm] = rgb2ind(im,256);
        if ind == 1;
           imwrite(imind,cm,[basedir, 'tx_eigspect' giffname],'gif', 'Loopcount',inf);
        else
            imwrite(imind,cm,[basedir, 'tx_eigspect' giffname],'gif','WriteMode','append');
        end;
     end;
     pause(0.2);
end;

% Calibrate the Dwingeloo dish out of the txchannel signal.
for ind = 1:nrec
    [dwg_ra, dwg_dec] = lmtoradec (dwg_uncal_l, dwg_uncal_m, tobs_mjdsec(ind)./86400+2400000.5, 6.869837540, 52.915122495);
    acmtx = zeros (288);
    acmtx (mask == 1) = squeeze(complex (acm_cat(ind,:, txchan, 1,1), acm_cat(ind,:,txchan,1,2)));
    acmtx = conj(acmtx + acmtx' - diag(diag(acmtx)));
    % soltx(ind) = pelican_sunAteamsub(acmtx, tobs_mjdsec(ind), freq, eye(288), flagant, 0, 1, [], [], 'poslocal_outer.mat', diag(dwg_ra), diag(dwg_dec));
    soltx(ind) = pelican_sunAteamsub(squeeze(acm_fdiff(ind,:,:)), tobs_mjdsec(ind), freq, eye(288), flagant, 0, 1, [], [], 'poslocal_outer.mat', diag(dwg_ra), diag(dwg_dec));
    acc_norfi = zeros (288, 288);
    acc_norfi (goodant, goodant) = soltx(ind).calvis + soltx(ind).sigman;
    %soltx_nodish(ind) = pelican_sunAteamsub(acc_norfi, tobs_mjdsec(ind), freq, eye(288), flagant, 0, 1, [], [], 'poslocal_outer.mat', [],[]);
end;

% Image the data with the Dwingeloo dish calibrated out.
maptx_nodish = zeros (nrec, gparm.uvpad, gparm.uvpad);
f2 =figure ('position', [0, 0, 1000, 1200]); 
img_accum = zeros (size(gparm.uvpad));
for ind = 1:nrec
   
    acc = soltx(ind).calvis; % acm_fdiff(ind,goodant, goodant);
    % acc = soltx_nodish(ind).calvis;
    % acc = squeeze(acm_fdiff(ind, goodant,goodant));
    [maptx_nodish(ind,:,:), calmap, calvis, l, m] = ... 
                   fft_imager_sjw_radec (acc, uloc_flag(:), vloc_flag(:), ...
										gparm, [], [], tobs_mjdsec(ind), freq, 0); 
%     if (ind == dwg_on) 
%         tmp = zeros (size (gparm.uvpad));
%         tmp = squeeze(abs(maptx_nodish(ind,:,:)))./max(max(squeeze(abs(maptx_nodish(ind,:,:)))));
%         img_accum = tmp;
%     end;
%     
%     if (ind > dwg_on && ind <= dwg_on+60)
%         tmp = zeros (size (gparm.uvpad));
%         tmp = squeeze(abs(maptx_nodish(ind,:,:)))./max(max(squeeze(abs(maptx_nodish(ind,:,:)))));
%         img_accum = (img_accum + tmp)./2; % (squeeze(abs(maptx_nodish(ind,:,:)))./max(max(squeeze(abs(maptx_nodish(ind,:,:)))))))/2;
%         fprintf (1, 'Ind: %d\n', ind);
%     end;                                

    figure(f1);
    imagesc (l, m, abs(squeeze(maptx_nodish(ind,:,:)))); colorbar;
    set (gca, 'YDir', 'Normal'); % To match orientation with station images
    set (gca, 'XDir', 'Reverse'); % To match orientation with station images
    title (sprintf ('Tx chan, No Dish. Rec: %d, Time: %s', ind, datestr(mjdsec2datenum(tobs_mjdsec(ind)))));
    ylabel('South $\leftarrow$ m $\rightarrow$ North', 'interpreter', 'latex');
    xlabel('East $\leftarrow$ l $\rightarrow$ West', 'interpreter', 'latex'); 
    
    [sel, sel_l, sel_m] = overplotcat (tobs_mjdsec(ind), srclist3CR, ... 
                                                  cat_thresh, gcf(), true);
    text (Moon_l(ind), Moon_m(ind), '*', 'Color', 'Yellow', 'Fontsize', 18);    
    drawnow();
    
    if (gif==1)
        frame = getframe(1);
        im = frame2im(frame);
        [imind,cm] = rgb2ind(im,256);
        if ind == 1;
           imwrite(imind,cm,[basedir, 'tx_dwgcaldiff' giffname],'gif', 'Loopcount',inf);
        else
            imwrite(imind,cm,[basedir, 'tx_dwgcaldiff' giffname],'gif','WriteMode','append');
        end;
    end;

    
    figure(f2);
    if (ind >= dwg_on && ind < dwg_on + 50)
        imagesc (l, m, squeeze (abs(mean(maptx_nodish(dwg_on:ind,:,:),1)))); colorbar;
    end;
    set (gca, 'YDir', 'Normal'); % To match orientation with station images
    set (gca, 'XDir', 'Reverse'); % To match orientation with station images
    title (sprintf ('Tx chan, No Dish. Rec: %d, Time: %s', ind, datestr(mjdsec2datenum(tobs_mjdsec(ind)))));
    ylabel('South $\leftarrow$ m $\rightarrow$ North', 'interpreter', 'latex');
    xlabel('East $\leftarrow$ l $\rightarrow$ West', 'interpreter', 'latex'); 
    
    [sel, sel_l, sel_m] = overplotcat (tobs_mjdsec(ind), srclist3CR, ... 
                                                  cat_thresh, gcf(), true);
    text (Moon_l(ind), Moon_m(ind), '*', 'Color', 'Yellow', 'Fontsize', 18);    
    drawnow();
    
    if (gif==1)
        frame = getframe(f2);
        im = frame2im(frame);
        [imind,cm] = rgb2ind(im,256);
        if ind == 1;
           imwrite(imind,cm,[basedir, 'tx_dwgcaldiff_acc' giffname],'gif', 'Loopcount',inf);
        else
            imwrite(imind,cm,[basedir, 'tx_dwgcaldiff_acc' giffname],'gif','WriteMode','append');
        end;
    end;
end;

% function genplot(acm, tobs_mjdsec, freq, parm)
%     for ind = 1:size (acm,1)
%         [map, calmap, calvis, l, m] = ... 
%                         fft_imager_sjw_radec (acm, parm.uloc_flag(:), parm.vloc_flag(:), ...
%                                             parm.gparm, [], [], tobs_mjdsec(ind), freq, 0);                                    
% 
%         imagesc (l, m, abs(squeeze(map))); colorbar;
%         set (gca, 'YDir', 'Normal'); % To match orientation with station images
%         set (gca, 'XDir', 'Reverse'); % To match orientation with station images
%         title (sprintf ('%s Rec: %d, Time: %s', parm.title, ind, datestr(mjdsec2datenum(tobs_mjdsec(ind)))));
%         ylabel('South $\leftarrow$ m $\rightarrow$ North', 'interpreter', 'latex');
%         xlabel('East $\leftarrow$ l $\rightarrow$ West', 'interpreter', 'latex'); 
% 
%         [sel, sel_l, sel_m] = overplotcat (tobs_mjdsec(ind), parm.srclist3CR, ... 
%                                                       parm.cat_thresh, gcf(), true);
%         text (parm.Moon_l(ind), parm.Moon_m(ind), '*', 'Color', 'yellow');
%         drawnow();
%         if (~isempty(parm.giffname))
%             frame = getframe(1);
%             im = frame2im(frame);
%             [imind,cm] = rgb2ind(im,256);
%             if ind == 1;
%                imwrite(imind,cm, parm.giffname,'gif', 'Loopcount',inf);
%             else
%                imwrite(imind,cm, parm.giffname,'gif','WriteMode','append');
%             end;
%         end;
% 
%     end;
% end;
